/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import VALIDACION.Validacion;
import controlador.ControladorRC;
import javax.swing.table.DefaultTableModel;
import utilidades.ConexionDB;
import java.sql.*;
import javax.swing.JOptionPane;
import modelo.Cliente;

/**
 *
 * @author hecto
 */
public class FrmCliente extends javax.swing.JFrame {

    /**
     * Creates new form FrmCliente
     */
    public FrmCliente() {
        initComponents();
        cargarClientesEnTabla();
    }
    
    private void eventoTabla(){
     int filaSeleccionada = tblCliente.getSelectedRow();
            if (filaSeleccionada != -1) {
                String nombre = tblCliente.getValueAt(filaSeleccionada, 0).toString();
                String apellidos = tblCliente.getValueAt(filaSeleccionada, 1).toString();
                String telefono = tblCliente.getValueAt(filaSeleccionada, 2).toString();
                txtNombre.setText(nombre);
                txtApellidos.setText(apellidos);
                txtTelefono.setText(telefono);
     }
    }
    
    public void cargarClientesEnTabla() {
    DefaultTableModel modelo = new DefaultTableModel(
        new Object[][] {},
        new String[] { "Nombre", "Apellidos", "Teléfono" }
    );
    tblCliente.setModel(modelo);
    modelo.setRowCount(0);

    try {
        Connection conexion = ConexionDB.getConexion();
        ControladorRC rc = new ControladorRC(conexion);

        for (Cliente c : rc.buscarTodosClientes()) {
            modelo.addRow(new Object[] {
                c.getNombre(),
                c.getApellidos(),
                c.getTelefono()
            });
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Book Antiqua", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 142, 142));
        jLabel1.setText("NUEVO CLIENTE");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 160, -1));

        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCliente);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 590, 280));

        jLabel2.setText("Nombres");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 260, -1));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/agregar.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 70, 100, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 130, -1, -1));

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/aceptar.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 100, -1));

        jLabel3.setText("Apellidos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));
        jPanel1.add(txtApellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 260, -1));

        jLabel4.setText("Telefono");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 260, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
       String nombre = txtNombre.getText().trim();
String apellidos = txtApellidos.getText().trim();
String telefono = txtTelefono.getText().trim();

// Validaciones
if (!Validacion.validarNoVacio(nombre) || !Validacion.validarSoloLetras(nombre)) {
    JOptionPane.showMessageDialog(this, "El campo NOMBRE es obligatorio y debe contener solo letras.");
    return;
}

if (!Validacion.validarNoVacio(apellidos) || !Validacion.validarSoloLetras(apellidos)) {
    JOptionPane.showMessageDialog(this, "El campo APELLIDOS es obligatorio y debe contener solo letras.");
    return;
}

if (!Validacion.validarSoloNumeros(telefono)) {
    JOptionPane.showMessageDialog(this, "El teléfono no es válido. Solo dígitos permitidos.");
    return;
}

Cliente cliente = new Cliente(nombre, apellidos, telefono);

try {
    Connection conexion = ConexionDB.getConexion();
    ControladorRC rc = new ControladorRC(conexion);

    if (rc.insertarCliente(cliente)) {
        JOptionPane.showMessageDialog(this, "Cliente insertado correctamente.");
        txtNombre.setText("");
        txtApellidos.setText("");
        txtTelefono.setText("");
        cargarClientesEnTabla();
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo insertar el cliente.");
    }

} catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Error al insertar cliente: " + ex.getMessage());
    ex.printStackTrace();
}

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int fila = tblCliente.getSelectedRow();

if (fila == -1) {
    JOptionPane.showMessageDialog(this, "Seleccione un cliente para editar.");
    return;
}

String nombreNuevo = txtNombre.getText().trim();
String apellidosNuevo = txtApellidos.getText().trim();
String telefonoNuevo = txtTelefono.getText().trim();

// Validaciones igual que en agregar...
// (puedes copiar y pegar las anteriores)

try {
    Connection conexion = ConexionDB.getConexion();
    ControladorRC rc = new ControladorRC(conexion);

    String nombreAnterior = tblCliente.getValueAt(fila, 0).toString();
    String apellidosAnteriores = tblCliente.getValueAt(fila, 1).toString();
    String telefonoAnterior = tblCliente.getValueAt(fila, 2).toString();

    Cliente clienteNuevo = new Cliente(nombreNuevo, apellidosNuevo, telefonoNuevo);

    if (rc.actualizarCliente(nombreAnterior, apellidosAnteriores, telefonoAnterior, clienteNuevo)) {
        JOptionPane.showMessageDialog(this, "Cliente actualizado correctamente.");
        cargarClientesEnTabla();
        txtNombre.setText("");
        txtApellidos.setText("");
        txtTelefono.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo actualizar el cliente.");
    }

} catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Error al editar cliente: " + ex.getMessage());
    ex.printStackTrace();
}


    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tblCliente.getSelectedRow();

if (filaSeleccionada == -1) {
    JOptionPane.showMessageDialog(this, "Selecciona un cliente en la tabla para eliminar.");
    return;
}

int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de eliminar este cliente?", "Confirmar", JOptionPane.YES_NO_OPTION);
if (confirmacion != JOptionPane.YES_OPTION) {
    return;
}

try {
    Connection conexion = ConexionDB.getConexion();
    ControladorRC rc = new ControladorRC(conexion);

    String nombre = tblCliente.getValueAt(filaSeleccionada, 0).toString();
    String apellidos = tblCliente.getValueAt(filaSeleccionada, 1).toString();
    String telefono = tblCliente.getValueAt(filaSeleccionada, 2).toString();

    if (rc.eliminarCliente(nombre, apellidos, telefono)) {
        ((DefaultTableModel) tblCliente.getModel()).removeRow(filaSeleccionada);
        cargarClientesEnTabla();
        txtNombre.setText("");
        txtApellidos.setText("");
        txtTelefono.setText("");
        JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.");
    } else {
        JOptionPane.showMessageDialog(this, "No se pudo eliminar el cliente.");
    }

} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Error al eliminar cliente: " + e.getMessage());
    e.printStackTrace();
}
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClienteMouseClicked
        // TODO add your handling code here:
        eventoTabla();
    }//GEN-LAST:event_tblClienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
